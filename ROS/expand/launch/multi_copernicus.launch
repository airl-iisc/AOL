<?xml version="1.0"?>
<launch>

    <arg name="wit_wt901c_imu" default="true"/>
    <arg name="lidar_test" default="true"/>
    <arg name="velodyne_vlp16" default="false"/>

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <!-- <arg name="world_name" value="$(find expand)/worlds/corridor_rooms.world"/> -->
      <arg name="paused" value="false"/>
      <arg name="use_sim_time" value="true"/>
      <arg name="gui" value="true"/>
      <arg name="headless" value="false"/>
      <arg name="debug" value="false"/>
    </include>  

    <group ns="robot1"> 
    <arg name="robot_namespace" default="robot1"/>
    <param name="tf_prefix" value="robot1" /> 
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" /> 
    <arg name="model" default="$(find volta_description)/urdf/volta.xacro"/> 
    <param name="robot_description" command="$(find xacro)/xacro $(arg model) robot_namespace:=$(arg robot_namespace)"/> 
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model robot1 -param robot_description -x 10.5 -y -4.5 -z 0 -R 0 -P 0 -Y 0">
    </node> 

    <include file="$(find volta_control)/launch/control.launch" >
    <arg name="robot_namespace" value="$(arg robot_namespace)"/>
    </include>
    <include file="$(find volta_navigation)/launch/navigation2.launch">
    <arg name="robot_namespace" value="$(arg robot_namespace)"/>
    </include>

    </group>

    <group ns="robot2">
    <arg name="robot_namespace" default="robot2"/>
    <param name="tf_prefix" value="robot2" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <arg name="model" default="$(find copernicus_description)/urdf/copernicus.xacro"/>
    <param name="robot_description" command="$(find xacro)/xacro $(arg model) robot_namespace:=$(arg robot_namespace) imu_enabled:=$(arg wit_wt901c_imu) test_lidar_enabled:=$(arg lidar_test) velodyne_enabled:=$(arg velodyne_vlp16)"/> 
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
      args="-urdf -model robot2 -param robot_description -x 9 -y -1 -z 0 -R 0 -P 0 -Y 0">
    </node>
    <include file="$(find copernicus_control)/launch/control.launch">
        <arg name="robot_namespace" value="$(arg robot_namespace)"/>
    </include>
    <include file="$(find copernicus_navigation)/launch/navigation2.launch">
        <arg name="robot_namespace" value="$(arg robot_namespace)"/>
    </include>  
    </group> 
    
    <group ns="robot3">
    <arg name="robot_namespace" default="robot3"/>
    <param name="tf_prefix" value="robot3" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <arg name="model" default="$(find copernicus_description)/urdf/copernicus.xacro"/>
    <param name="robot_description" command="$(find xacro)/xacro $(arg model) robot_namespace:=$(arg robot_namespace) imu_enabled:=$(arg wit_wt901c_imu) test_lidar_enabled:=$(arg lidar_test) velodyne_enabled:=$(arg velodyne_vlp16)"/> 
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
      args="-urdf -model robot3 -param robot_description -x 7 -y -1 -z 0 -R 0 -P 0 -Y 0">
    </node>
    <include file="$(find copernicus_control)/launch/control.launch">
        <arg name="robot_namespace" value="$(arg robot_namespace)"/>
    </include>
    <include file="$(find copernicus_navigation)/launch/navigation2.launch">
        <arg name="robot_namespace" value="$(arg robot_namespace)"/>
    </include>  
    </group> 

    <group ns="robot4">
    <arg name="robot_namespace" default="robot4"/>
    <param name="tf_prefix" value="robot4" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <arg name="model" default="$(find copernicus_description)/urdf/copernicus.xacro"/>
    <param name="robot_description" command="$(find xacro)/xacro $(arg model) robot_namespace:=$(arg robot_namespace) imu_enabled:=$(arg wit_wt901c_imu) test_lidar_enabled:=$(arg lidar_test) velodyne_enabled:=$(arg velodyne_vlp16)"/> 
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
      args="-urdf -model robot4 -param robot_description -x 11 -y -1 -z 0 -R 0 -P 0 -Y 0">
    </node>
    <include file="$(find copernicus_control)/launch/control.launch">
        <arg name="robot_namespace" value="$(arg robot_namespace)"/>
    </include>
    <include file="$(find copernicus_navigation)/launch/navigation2.launch">
        <arg name="robot_namespace" value="$(arg robot_namespace)"/>
    </include>  
    </group> 

    <group ns="robot5">
    <arg name="robot_namespace" default="robot5"/>
    <param name="tf_prefix" value="robot5" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <arg name="model" default="$(find copernicus_description)/urdf/copernicus.xacro"/>
    <param name="robot_description" command="$(find xacro)/xacro $(arg model) robot_namespace:=$(arg robot_namespace) imu_enabled:=$(arg wit_wt901c_imu) test_lidar_enabled:=$(arg lidar_test) velodyne_enabled:=$(arg velodyne_vlp16)"/> 
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
      args="-urdf -model robot5 -param robot_description -x 9 -y -2 -z 0 -R 0 -P 0 -Y 0">
    </node>
    <include file="$(find copernicus_control)/launch/control.launch">
        <arg name="robot_namespace" value="$(arg robot_namespace)"/>
    </include>
    <include file="$(find copernicus_navigation)/launch/navigation2.launch">
        <arg name="robot_namespace" value="$(arg robot_namespace)"/>
    </include>  
    </group> 

    <group ns="robot6">
    <arg name="robot_namespace" default="robot6"/>
    <param name="tf_prefix" value="robot6" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <arg name="model" default="$(find copernicus_description)/urdf/copernicus.xacro"/>
    <param name="robot_description" command="$(find xacro)/xacro $(arg model) robot_namespace:=$(arg robot_namespace) imu_enabled:=$(arg wit_wt901c_imu) test_lidar_enabled:=$(arg lidar_test) velodyne_enabled:=$(arg velodyne_vlp16)"/> 
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
      args="-urdf -model robot6 -param robot_description -x 8 -y -1 -z 0 -R 0 -P 0 -Y 0">
    </node>
    <include file="$(find copernicus_control)/launch/control.launch">
        <arg name="robot_namespace" value="$(arg robot_namespace)"/>
    </include>
    <include file="$(find copernicus_navigation)/launch/navigation2.launch">
        <arg name="robot_namespace" value="$(arg robot_namespace)"/>
    </include>  
    </group> 
    
    <group ns="robot7">
    <arg name="robot_namespace" default="robot7"/>
    <param name="tf_prefix" value="robot7" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <arg name="model" default="$(find copernicus_description)/urdf/copernicus.xacro"/>
    <param name="robot_description" command="$(find xacro)/xacro $(arg model) robot_namespace:=$(arg robot_namespace) imu_enabled:=$(arg wit_wt901c_imu) test_lidar_enabled:=$(arg lidar_test) velodyne_enabled:=$(arg velodyne_vlp16)"/> 
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
      args="-urdf -model robot7 -param robot_description -x 10 -y -1 -z 0 -R 0 -P 0 -Y 0">
    </node>
    <include file="$(find copernicus_control)/launch/control.launch">
        <arg name="robot_namespace" value="$(arg robot_namespace)"/>
    </include>
    <include file="$(find copernicus_navigation)/launch/navigation2.launch">
        <arg name="robot_namespace" value="$(arg robot_namespace)"/>
    </include>  
    </group> 


</launch>
